FROM node:20-alpine AS base

# Install dependencies for native modules
RUN apk add --no-cache libc6-compat

WORKDIR /app

# Copy root package files
COPY package*.json ./
COPY turbo.json ./

# Copy workspace package.json files
COPY apps/*/package*.json ./apps/
COPY packages/*/package*.json ./packages/

# Install dependencies (including dev dependencies for build)
RUN npm ci --include=dev

# Copy source code (optimized for caching)
COPY apps/account/ ./apps/account/
COPY packages/ ./packages/
COPY turbo.json ./

# Ensure workspace links are properly created
RUN npm install

# Build stage
FROM node:20-alpine AS builder

WORKDIR /app

# Copy dependencies and source
COPY --from=base /app/package*.json ./
COPY --from=base /app/turbo.json ./
COPY --from=base /app/node_modules ./node_modules
COPY --from=base /app/apps ./apps
COPY --from=base /app/packages ./packages

# Set build-time environment variables
ENV NEXT_PUBLIC_API_URL=http://localhost:8080

# Build the account app
RUN npm run build --filter=account

# Production stage
FROM node:20-alpine AS production

WORKDIR /app

# Create non-root user for security
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy built app and dependencies
COPY --from=builder /app/package*.json ./
COPY --from=builder /app/turbo.json ./
COPY --from=builder /app/apps/account/.next ./apps/account/.next
COPY --from=builder /app/apps/account/package*.json ./apps/account/
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/packages ./packages

# Set proper permissions
RUN chown -R nextjs:nodejs /app

# Set environment
ENV NODE_ENV=production
ENV PORT=8080

# Cloud Run requires port 8080
EXPOSE 8080

# Switch to non-root user
USER nextjs

# Health check for Cloud Run
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:8080 || exit 1

# Start the application
CMD ["npm", "run", "start", "--workspace=account", "--", "-p", "8080"]
