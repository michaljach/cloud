FROM node:20-alpine AS base

# Install dependencies for native modules
RUN apk add --no-cache libc6-compat

WORKDIR /app

# Copy root package files
COPY package*.json ./
COPY turbo.json ./

# Copy workspace package.json files
COPY apps/*/package*.json ./apps/
COPY packages/*/package*.json ./packages/

# Install dependencies (including dev dependencies for build)
RUN npm ci --include=dev

# Copy source code
COPY . .

# Ensure workspace links are properly created
RUN npm install

# Generate Prisma client for API
RUN cd apps/api && npx prisma generate

# Build UI package
RUN cd packages/ui && npm run build

# Build API
RUN cd apps/api && npm run build

# Ensure Prisma directories exist
RUN mkdir -p apps/api/node_modules/.prisma apps/api/node_modules/@prisma

# Production stage
FROM node:20-alpine AS production

WORKDIR /app

# Create non-root user for security
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy built app and dependencies
COPY --from=base /app/package*.json ./
COPY --from=base /app/turbo.json ./
COPY --from=base /app/apps/api/dist ./apps/api/dist
COPY --from=base /app/apps/api/package*.json ./apps/api/
COPY --from=base /app/apps/api/tsconfig.json ./apps/api/
COPY --from=base /app/apps/api/prisma ./apps/api/prisma
COPY --from=base /app/apps/api/src/lib ./apps/api/src/lib
COPY --from=base /app/node_modules ./node_modules
COPY --from=base /app/packages ./packages



# Create uploads directory with proper permissions
RUN mkdir -p /app/apps/api/uploads && chown -R nextjs:nodejs /app



# Set environment
ENV NODE_ENV=production
ENV PORT=8080

# Cloud Run requires port 8080
EXPOSE 8080

# Switch to non-root user
USER nextjs

# Health check for Cloud Run
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1

# Start the application
CMD ["node", "-r", "tsconfig-paths/register", "--require", "tsconfig-paths/register", "apps/api/dist/index.js"]
