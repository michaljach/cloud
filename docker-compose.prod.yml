version: '3.8'
services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - --api.insecure=false
      - --providers.docker=true
      - --entrypoints.web.address=:80
    ports:
      - '80:80'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  postgres:
    image: postgres:15
    container_name: myapp-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: myapp
    volumes:
      - postgres_data:/var/lib/postgresql/data

  api:
    image: myapp-api:latest
    container_name: myapp-api
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/myapp
      FILE_ENCRYPTION_KEY: 0123456789abcdef0123456789abcdef
      PORT: 8000
    working_dir: /app
    restart: unless-stopped
    volumes:
      - storage_data:/app/storage
      - shared_data:/app/shared
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.api.rule=Host(`api.localhost`)'
      - 'traefik.http.services.api.loadbalancer.server.port=8000'

  dashboard:
    image: myapp-dashboard:latest
    container_name: myapp-dashboard
    restart: unless-stopped
    volumes:
      - shared_data:/app/shared
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.dashboard.rule=Host(`dashboard.localhost`)'
      - 'traefik.http.services.dashboard.loadbalancer.server.port=3000'

volumes:
  postgres_data:
  storage_data:
  shared_data:
