version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: cloud-postgres-dev
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=cloud
    ports:
      - '5432:5432'
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - cloud-network-dev

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
      target: base
    container_name: cloud-api-dev
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/cloud
      - JWT_SECRET=dev-secret-key
      - PORT=4000
      - OAUTH_CLIENT_ID=cloud-client
      - OAUTH_CLIENT_SECRET=cloud-secret
    ports:
      - '4000:4000'
    depends_on:
      - postgres
    networks:
      - cloud-network-dev
    volumes:
      - ./apps/api:/app/apps/api
      - ./packages:/app/packages
      - uploads_dev:/app/apps/api/uploads
    command: npm run dev --workspace=api

  account:
    build:
      context: .
      dockerfile: apps/account/Dockerfile
      target: base
    container_name: cloud-account-dev
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:4000
      - API_URL=http://api:4000
      - PORT=3000
    ports:
      - '3000:3000'
    depends_on:
      - api
    networks:
      - cloud-network-dev
    volumes:
      - ./apps/account:/app/apps/account
      - ./packages:/app/packages
    command: npm run dev --workspace=account

  files:
    build:
      context: .
      dockerfile: apps/files/Dockerfile
      target: base
    container_name: cloud-files-dev
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:4000
      - PORT=3001
    ports:
      - '3001:3001'
    depends_on:
      - api
    networks:
      - cloud-network-dev
    volumes:
      - ./apps/files:/app/apps/files
      - ./packages:/app/packages
    command: npm run dev --workspace=files

  notes:
    build:
      context: .
      dockerfile: apps/notes/Dockerfile
      target: base
    container_name: cloud-notes-dev
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:4000
      - PORT=3002
    ports:
      - '3002:3002'
    depends_on:
      - api
    networks:
      - cloud-network-dev
    volumes:
      - ./apps/notes:/app/apps/notes
      - ./packages:/app/packages
    command: npm run dev --workspace=notes

volumes:
  postgres_data_dev:
  uploads_dev:

networks:
  cloud-network-dev:
    driver: bridge
